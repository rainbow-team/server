<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainbow.security.dao.AccidentSecurityMapper">
  <resultMap id="AccidentSecurityBaseResultMap" type="com.rainbow.security.domain.AccidentSecurity">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="service_id" jdbcType="VARCHAR" property="serviceId" />
    <result column="umine_id" jdbcType="VARCHAR" property="umineId" />
    <result column="fac_id" jdbcType="VARCHAR" property="facId" />
    <result column="umine_place_id" jdbcType="VARCHAR" property="uminePlaceId" />
    <result column="fac_status_id" jdbcType="VARCHAR" property="facStatusId" />
    <result column="umine_place_status_id" jdbcType="VARCHAR" property="uminePlaceStatusId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="occur_date" jdbcType="DATE" property="occurDate" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="nature_id" jdbcType="VARCHAR" property="natureId" />
    <result column="is_import" jdbcType="INTEGER" property="isImport" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_id" jdbcType="VARCHAR" property="modifyId" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="process" jdbcType="LONGVARCHAR" property="process" />
    <result column="consequence" jdbcType="LONGVARCHAR" property="consequence" />
    <result column="reason" jdbcType="LONGVARCHAR" property="reason" />
    <result column="measure" jdbcType="LONGVARCHAR" property="measure" />
    <result column="feedback" jdbcType="LONGVARCHAR" property="feedback" />
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>


  <resultMap id="AccidentSecurityExtendMap" extends="AccidentSecurityBaseResultMap" type="com.rainbow.security.domain.extend.AccidentSecurityExtend">
    <result column="serviceDepartName" jdbcType="VARCHAR" property="serviceDepartName" />
    <result column="umineName" jdbcType="VARCHAR" property="umineName" />
    <result column="facName" jdbcType="VARCHAR" property="facName" />
    <result column="uminePlaceName" jdbcType="VARCHAR" property="uminePlaceName" />
    <result column="facStatusValue" jdbcType="VARCHAR" property="facStatusValue" />
    <result column="uminePlaceStatusValue" jdbcType="VARCHAR" property="uminePlaceStatusValue" />
    <result column="typeValue" jdbcType="VARCHAR" property="typeValue" />
    <result column="natureValue" jdbcType="VARCHAR" property="natureValue" />
  </resultMap>


  <select id="getAccidentSecurityList" parameterType="map" resultMap="AccidentSecurityExtendMap">
    select
    t.*,
    sd.name serviceDepartName,
    u.name umineName,
    f.name facName,
    up.name uminePlaceName,
    s.value facStatusValue,
    ups.value uminePlaceStatusValue,
    aty.value typeValue,
    ana.value natureValue
    from security_accident t
    left join unit_service_depart sd on t.service_id = sd.id
    left join unit_umine u on t.umine_id = u.id
    left join unit_fac f on t.fac_id = f.id
    left join unit_umine_place up on t.umine_place_id = up.id
    left join config_fac_status s on t.fac_status_id = s.id
    left join config_umine_place_status ups on t.umine_place_status_id = ups.id
    left join config_accident_type aty on t.type_id = aty.id
    left join config_accident_nature ana on t.nature_id = ana.id
    where 1=1
    <!--<if test="serviceDepartName != null and serviceDepartName != ''">-->
    <!--and instr(sd.name,#{serviceDepartName})>0-->
    <!--</if>-->

    <!--<if test="umineName != null and umineName != ''">-->
    <!--or instr(u.name,#{umineName})>0-->
    <!--</if>-->

    <if test="depart != null and depart != ''">
      and (instr(sd.name,#{depart})>0 or instr(u.name,#{depart})>0)
    </if>

    <!--<if test="facName != null and facName != ''">-->
    <!--and instr(f.name,#{facName})>0-->
    <!--</if>-->

    <!--<if test="uminePlaceName != null and uminePlaceName != ''">-->
    <!--or instr(up.name,#{uminePlaceName})>0-->
    <!--</if>-->

    <if test="fac != null and fac != ''">
      and (instr(f.name,#{fac})>0 or instr(up.name,#{fac})>0)
    </if>

    <if test="facStatusTypeIds != null">
      and t.fac_status_id in (
      <foreach item="item" index="index" collection="facStatusTypeIds" separator=",">
        #{item}
      </foreach>
      )
    </if>

    <if test="uminePlaceStatusTypeIds != null">
      and t.umine_place_status_id in (
      <foreach item="item" index="index" collection="uminePlaceStatusTypeIds" separator=",">
        #{item}
      </foreach>
      )
    </if>

    <if test="name != null and name != ''">
      and instr(t.name,#{name})>0
    </if>

    <if test="start_date != null and start_date != ''">
      and DATE(t.occur_date)
      <![CDATA[  >=  ]]>
      DATE(#{start_date})
    </if>

    <if test="end_date != null and end_date != ''">
      and DATE(t.occur_date)
      <![CDATA[  <=  ]]>
      DATE(#{end_date})
    </if>

    <if test="typeIds != null">
      and t.type_id in (
      <foreach item="item" index="index" collection="typeIds" separator=",">
        #{item}
      </foreach>
      )
    </if>

    <if test="natureIds != null">
      and t.nature_id in (
      <foreach item="item" index="index" collection="natureIds" separator=",">
        #{item}
      </foreach>
      )
    </if>

    <if test="servicedepartId != null and servicedepartId != ''">
      and t.service_id = #{servicedepartId}
    </if>

    <if test="umineId != null and umineId != ''">
      and t.umine_id = #{umineId}
    </if>
    order by t.modify_date desc
  </select>


  <select id="getAccidentSecurityById" parameterType="java.lang.String" resultMap="AccidentSecurityExtendMap">


    select
    t.*,
    sd.name serviceDepartName,
    u.name umineName,
    f.name facName,
    up.name uminePlaceName,
    s.value facStatusValue,
    ups.value uminePlaceStatusValue,
    aty.value typeValue,
    ana.value natureValue
    from security_accident t
    left join unit_service_depart sd on t.service_id = sd.id
    left join unit_umine u on t.umine_id = u.id
    left join unit_fac f on t.fac_id = f.id
    left join unit_umine_place up on t.umine_place_id = up.id
    left join config_fac_status s on t.fac_status_id = s.id
    left join config_umine_place_status ups on t.umine_place_status_id = ups.id
    left join config_accident_type aty on t.type_id = aty.id
    left join config_accident_nature ana on t.nature_id = ana.id
    where t.id = #{id}

  </select>

  <select id="verifyDuplication" resultType="int" parameterType="java.util.Map">
    select count(1) from security_accident WHERE service_id=#{serviceId} and umine_id=#{umineId} and fac_id=#{facId} and 
    umine_place_id=#{uminePlaceId}  and fac_status_id=#{facStatusId} and umine_place_status_id=#{uminePlaceStatusId} and 
    `name`=#{name} and occur_date=#{occurDate};
  </select>
</mapper>