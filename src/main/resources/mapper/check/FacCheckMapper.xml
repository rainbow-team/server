<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainbow.check.dao.FacCheckMapper">
  <resultMap id="FacCheckBaseResultMap" type="com.rainbow.check.domain.FacCheck">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="service_id" jdbcType="VARCHAR" property="serviceId" />
    <result column="fac_id" jdbcType="VARCHAR" property="facId" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="stage_id" jdbcType="VARCHAR" property="stageId" />
    <result column="check_date" jdbcType="DATE" property="checkDate" />
    <result column="is_import" jdbcType="INTEGER" property="isImport" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_id" jdbcType="VARCHAR" property="modifyId" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>

  <resultMap id="FacCheckExtendMap" extends="FacCheckBaseResultMap" type="com.rainbow.check.domain.FacCheckExtend">
    <result column="serviceDepartName" jdbcType="VARCHAR" property="serviceDepartName" />
    <result column="facName" jdbcType="VARCHAR" property="facName" />
    <result column="typeValue" jdbcType="VARCHAR" property="typeValue" />
    <result column="stageValue" jdbcType="VARCHAR" property="stageValue" />
  </resultMap>

  <select id="getFacCheckList" parameterType="map" resultMap="FacCheckExtendMap">

    select
     t.*,
     us.name serviceDepartName,
     f.name facName,
     ft.value typeValue,
     fs.value stageValue
    from check_fac t
    left join unit_service_depart us on t.service_id = us.id
    left join unit_fac f on t.fac_id = f.id
    left join config_fac_check_type ft on t.type_id = ft.id
    left join config_fac_check_stage fs on t.stage_id = fs.id
    where 1 = 1

    <if test="serviceDepartName != null and serviceDepartName != ''">
      and instr(us.name,#{serviceDepartName})>0
    </if>

    <if test="facName != null and facName != ''">
      and instr(f.name,#{facName})>0
    </if>

    <if test="typeIds != null">
      and t.type_id in (
      <foreach item="item" index="index" collection="typeIds" separator=",">
        #{item}
      </foreach>
      )
    </if>

    <if test="stageIds != null">
      and t.stage_id in (
      <foreach item="item" index="index" collection="stageIds" separator=",">
        #{item}
      </foreach>
      )
    </if>

    <if test="facId != null and facId != ''">
      and t.fac_id = #{facId}
    </if>


    order by t.check_date desc

  </select>



  <select id="getFacCheckById" parameterType="java.lang.String" resultMap="FacCheckExtendMap">

    select
     t.*,
     us.name serviceDepartName,
     f.name facName,
     ft.value typeValue,
     fs.value stageValue
    from check_fac t
    left join unit_service_depart us on t.service_id = us.id
    left join unit_fac f on t.fac_id = f.id
    left join config_fac_check_type ft on t.type_id = ft.id
    left join config_fac_check_stage fs on t.stage_id = fs.id
    where t.id = #{id}

  </select>

  <delete id="deleteFacCheckById" parameterType="java.lang.String">
    delete from check_fac where id = #{id}
  </delete>

  <!--查询是否存在，每次需要根据进度添加 exists-->
  <select id="getFacCheckRelationCount" parameterType="java.lang.String" resultType="java.lang.Object">
    select
     t.id
    from check_fac t
    where t.id = #{id}
    and not exists(select 1 from check_fac_file a where a.check_fac_id = t.id)
  </select>

</mapper>