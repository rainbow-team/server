<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainbow.supervision.dao.BreakCheckerMapper">
  <resultMap id="BreakCheckerBaseResultMap" type="com.rainbow.supervision.domain.BreakChecker">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="employ_depart" jdbcType="VARCHAR" property="employDepart" />
    <result column="check_method_id" jdbcType="VARCHAR" property="checkMethodId" />
    <result column="check_level_id" jdbcType="VARCHAR" property="checkLevelId" />
    <result column="valid_date" jdbcType="DATE" property="validDate" />
    <result column="cert_number" jdbcType="VARCHAR" property="certNumber" />
    <result column="cert_depart" jdbcType="VARCHAR" property="certDepart" />
    <result column="cert_date" jdbcType="DATE" property="certDate" />
    <result column="is_import" jdbcType="INTEGER" property="isImport" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_id" jdbcType="VARCHAR" property="modifyId" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>

  <resultMap id="BreakCheckerExtendMap" extends="BreakCheckerBaseResultMap" type="com.rainbow.supervision.domain.extend.BreakCheckerExtend">
    <result column="checkMethodValue" jdbcType="VARCHAR" property="checkMethodValue" />
    <result column="checkLevelValue" jdbcType="VARCHAR" property="checkLevelValue" />
  </resultMap>


  <select id="getBreakCheckerList" parameterType="map" resultMap="BreakCheckerExtendMap">

    select
      t.*,
      cm.value checkMethodValue,
      cl.value checkLevelValue
    from supervision_break_checker t
    left join config_check_method cm on t.check_method_id = cm.id
    left join config_check_level cl on t.check_level_id = cl.id
    where 1=1

    <if test="name != null and name != ''">
      and instr(t.name,#{name})>0
    </if>

    <if test="checkMethodIds != null">
      and t.check_method_id in (
      <foreach item="item" index="index" collection="checkMethodIds" separator=",">
        #{item}
      </foreach>
      )
    </if>

    <if test="checkLevelIds != null">
      and t.check_level_id in (
      <foreach item="item" index="index" collection="checkLevelIds" separator=",">
        #{item}
      </foreach>
      )
    </if>

    <if test="employ_depart != null and employ_depart != ''">
      and instr(t.employ_depart,#{employ_depart})>0
    </if>

    <if test="start_date != null and start_date != ''">
      and DATE(t.valid_date) <![CDATA[  >=  ]]> DATE(#{start_date})
    </if>

    <if test="end_date != null and end_date != ''">
      and DATE(t.valid_date) <![CDATA[  <=  ]]> DATE(#{end_date})
    </if>

    <if test="cert_number != null and cert_number != ''">
      and instr(t.cert_number,#{cert_number})>0
    </if>

  </select>


  <select id="getBreakCheckerById" parameterType="map" resultMap="BreakCheckerExtendMap">

    select
    t.*,
    cm.value checkMethodValue,
    cl.value checkLevelValue
    from supervision_break_checker t
    left join config_check_method cm on t.check_method_id = cm.id
    left join config_check_level cl on t.check_level_id = cl.id
    where t.id = #{id}

  </select>

</mapper>