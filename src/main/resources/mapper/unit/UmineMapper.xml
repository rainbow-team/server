<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rainbow.unit.dao.UmineMapper">
  <resultMap id="BaseUmineResultMap" type="com.rainbow.unit.domain.Umine">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="emergency_tel" jdbcType="VARCHAR" property="emergencyTel" />
    <result column="fax" jdbcType="VARCHAR" property="fax" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="leader" jdbcType="VARCHAR" property="leader" />
    <result column="leader_tel" jdbcType="VARCHAR" property="leaderTel" />
    <result column="depart_leader" jdbcType="VARCHAR" property="departLeader" />
    <result column="depart_leader_tel" jdbcType="VARCHAR" property="departLeaderTel" />
    <result column="is_import" jdbcType="INTEGER" property="isImport" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_id" jdbcType="VARCHAR" property="modifyId" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="survey" jdbcType="LONGVARCHAR" property="survey" />
    <result column="feature" jdbcType="LONGVARCHAR" property="feature" />
    <result column="note" jdbcType="LONGVARCHAR" property="note" />
  </resultMap>

  <resultMap id="UmineExtendMap" extends="BaseUmineResultMap" type="com.rainbow.unit.domain.UmineExtend">
    <result column="groupName" jdbcType="VARCHAR" property="groupName" />
  </resultMap>

  <select id="getUmineList" parameterType="map" resultMap="UmineExtendMap">
    select
     t.*,
     g.name groupName
    from unit_umine t
    left join unit_group g on t.group_id = g.id
    where 1=1
    <if test="name != null and name != ''">
      and instr(t.name,#{name})>0
    </if>
    order by t.modify_date desc
  </select>

  <select id="getUmineById" parameterType="java.lang.String" resultMap="UmineExtendMap">

    select
     t.*,
     g.name groupName
    from unit_umine t
    left join unit_group g on t.group_id = g.id
    where t.id = #{id}

  </select>

  <select id="getSumByGroupId" parameterType="java.lang.String" resultType="int">
    select
      ifnull(count(id),0)
    from unit_umine t
    where t.group_id = #{groupId}
  </select>

  <delete id="deleteUmineById" parameterType="java.lang.String">
    delete from unit_umine where id = #{id}
  </delete>

  <!--查询是否存在，每次需要根据进度添加 exists-->
  <select id="getUmineRelationCount" parameterType="java.lang.String" resultType="java.lang.Object">
    select
     t.id
    from unit_umine t
    where t.id = #{id}
    and not exists(select 1 from unit_umine_mountain a where a.umine_id = t.id)
    and not exists(select 1 from unit_umine_place b where b.umine_id = t.id)
    and not exists(select 1 from permit_umine_place c where c.umine_id = t.id)
    and not exists(select 1 from check_umine_place d where d.umine_id = t.id)
    and not exists(select 1 from check_umine_mountain e where e.umine_id = t.id)
    and not exists(select 1 from monitor_check h where h.umine_id = t.id)
    and not exists(select 1 from monitor_witness i where i.umine_id = t.id)
    and not exists(select 1 from security_umine_place j where j.umine_id = t.id)
    and not exists(select 1 from security_accident k where k.umine_id = t.id)
  </select>

  <select id="getUmineIdByName" parameterType="java.lang.String" resultType="java.lang.String">
    select t.id from unit_umine t where t.`name`=#{name} limit 1;
  </select>
</mapper>